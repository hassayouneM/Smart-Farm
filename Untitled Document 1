void cap_alarm(GtkWidget *liste,int day,int month, int year )
{
printf("f");
FILE *f;

int jour ;
int numb;
int mois ;
int annee ;
float val ;
 
GtkCellRenderer *renderer; 
GtkTreeViewColumn *column;
GtkTreeIter iter; 
GtkTreeStore *store;
store=gtk_tree_view_get_model(liste);
if (store==NULL)
{
renderer=gtk_cell_renderer_text_new();
column=gtk_tree_view_column_new_with_attributes("Numero",renderer,"text",NUMERO,NULL);
gtk_tree_view_append_column(GTK_TREE_VIEW(liste),column);
renderer=gtk_cell_renderer_text_new();
column=gtk_tree_view_column_new_with_attributes("Type",renderer,"text",TYPEP,NULL);
gtk_tree_view_append_column(GTK_TREE_VIEW(liste),column);
renderer=gtk_cell_renderer_text_new();

store=gtk_list_store_new(COLUMNSMOUNA2, G_TYPE_INT, G_TYPE_STRING);}

    f=fopen("temperature.txt","r");
    if(f!=NULL)
    {
        while(fscanf(f,"%d %d %d %d %f",&numb,&jour,&mois,&annee,&val)!=EOF)
        {
            if((jour==day) && (mois==month) && (annee==year))
            {
		
                if(val<5||val>40)
                   {
gtk_list_store_append(store,&iter);
gtk_list_store_set(store,&iter,NUMERO,numb,TYPE,"Temperature",-1);} 
            }
        }
    }
fclose(f);
    f=fopen("humidite.txt","r");
    if(f!=NULL)
    {
        while(fscanf(f,"%d %d %d %d %f",&numb,&jour,&mois,&annee,&val)!=EOF)
        {
            if((jour==day) && (mois==month) && (annee==year))
            {
                if((jour==day) && (mois==month) && (annee==year))

                   { if(val<30||val>100){
gtk_list_store_append(store,&iter);
			gtk_list_store_set(store,&iter,NUMERO,numb,TYPE,"Humidite",-1);}}
            }

        }
    }
fclose(f);


gtk_tree_view_set_model(GTK_TREE_VIEW(liste),GTK_TREE_MODEL(store));
g_object_unref(store);}
































void
on_button_aff_cap_clicked             (GtkWidget       *objet,
                                        gpointer         user_data)
{
GtkWidget* spinbutton_day_cap;
GtkWidget* spinbutton_month_cap;
GtkWidget* spinbutton_year_cap;
GtkWidget* mouna_partie2;
GtkWidget *treeview_mounap2;
int day, month, year;

spinbutton_day_cap=lookup_widget(objet,"spinbutton_day_cap");
day=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(spinbutton_day_cap));


spinbutton_month_cap=lookup_widget(objet,"spinbutton_month_cap");
month=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(spinbutton_month_cap));

spinbutton_year_cap=lookup_widget(objet,"spinbutton_year_cap");
year=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(spinbutton_year_cap));

treeview_mounap2=lookup_widget(mouna_partie2,"treeview_mounap2");

cap_alarm(treeview_mounap2,day, month, year);
}

